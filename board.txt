=tabla = entidad = clase
atributo = atributo = columna
objeto = fila
arreglos = tablas

const student = {
    name: 'juanito'
    app: 'perez'
}

// programacion declarativa
arr.forEach(element => console.log(element))

// programacion imperativa
for (let i=0; i<arr.length; i++) {
    console.log(arr[i])
}


================================================================================================================================================================

POSTGRESQL





BD => CRUD
    create
    read
    update
    delete

API => METHODS HTTP
    get
    post 
    put/patch
    delete


Dependencias

npm i nodemon o npm i nodemon --save   ===> package.json(dependencias)
npm i nodemon -D    ===> package.json(devDependencias)
npm i -g nodemon    ===> node global (su compu)

Partes de c/endpoint

1. Ruta (router)
2. Obtener datos del request (controller) y el response
3. Logica de negocio (services)
4. Acceso a datos (model, data) 


PARAMETROS EN URL

https://www.tutorialesprogramacionya.com/javascriptya/nodejsya/detalleconcepto.php?punto=13&codigo=13&inicio=0 o localhost:3000/api/store/products?limit=100
https://pokeapi.co/api/v2/pokemon/pikachu o localhost:3000/api/store/sku001/products

Query Params (?): Establecer filtros y limites a la informacion myservidorsito.com/?startDate=14/12/23&endDate=31/12/23 => delimitadores del tamaÃ±o o rango de la info que obtiene
Request Params (/); Seleccionar elementos especificos con ciertos valores condiciones => selectores de un recurso especifico que cumple ciertas condiciones
Body: Informar un objeto o crearlo/modicarlo.

Conexion a DB

1. Tener una DB
2. Tener valores para conectarnos a la DB (user, password, port)
3. .env (variables de entorno) => dotenv (dependencia de npm)
4. Archivo config
5. Connection Pool => pg (dependencia de npm)

NOTAS PARA IMPLEMENTACION DE DB
persistencia
cliente, pool, orm
como buscar codigo sql

POSTMAN vs Front end app
cors